{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","types/sortType.ts","components/Loader/Loader.tsx","components/PeopleTable.tsx","utils/filter.ts","components/PeoplePage.tsx","components/Navbar.tsx","api.ts","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","CENTURIES","PeopleFilters","setSearchParams","currentQuery","get","currentSex","centuries","getAll","className","cn","trim","sex","type","placeholder","onChange","event","query","target","map","century","includes","filter","year","length","SortField","Loader","PeopleTable","person","isLoading","slug","useParams","currentSearch","currentOrder","currentCenturies","sortOrderIcon","field","currentSortField","Sex","Born","Died","Name","filteredPersons","people","filteredPeople","normalizeQuery","toLowerCase","name","fatherName","motherName","Math","ceil","born","sortField","order","sort","p1","p2","localeCompare","filterPeople","findParent","persons","parentName","find","parent","personItem","father","mother","died","PeoplePage","Navbar","loacation","useLocation","role","pathname","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","useState","setPerson","setIsLoading","useEffect","getPeople","finally","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cea20fce.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get('query') || '';\n  const currentSex = searchParams.get('sex') || '';\n  const centuries = [...searchParams.getAll('centuries')];\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(\n      searchParams,\n      { query: event.target.value.trim() || null },\n    );\n\n    setSearchParams(search);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': currentQuery.trim() === '' && !currentSex,\n          })}\n          params={{ sex: '' }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': currentSex === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': currentSex === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={currentQuery}\n            onChange={handleQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          {CENTURIES.map(century => (\n            <SearchLink\n              key={century}\n              data-cy=\"century\"\n              params={{\n                centuries: centuries.includes(century)\n                  ? centuries.filter(year => year !== century)\n                  : [...centuries, century],\n              }}\n              className={cn(\n                'button mr-1',\n                { 'is-info': centuries.includes(century) },\n              )}\n            >\n              {century}\n            </SearchLink>\n          ))}\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button', 'is-success', {\n                'is-outlined': centuries.length > 0,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","export enum SortField {\n  All = '',\n  Sex = 'sex',\n  Name = 'name',\n  Born = 'born',\n  Died = 'died',\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person, SortField } from '../types';\nimport { Loader } from './Loader';\nimport { filterPeople } from '../utils/filter';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  person: Person[]\n  isLoading: boolean\n};\n\nexport const PeopleTable:React.FC<Props> = ({ person, isLoading }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n  const currentSearch = searchParams.get('sort') || '';\n  const currentOrder = searchParams.get('order') || '';\n  const currentSex = searchParams.get('sex') || '';\n  const currentQuery = searchParams.get('query') || '';\n  const currentCenturies = searchParams.getAll('centuries') || [];\n\n  const sortOrderIcon = (field: string) => (\n    cn('fas', {\n      'fa-sort': currentSearch !== `${field}`,\n      'fa-sort-up': currentSearch === `${field}` && currentOrder !== 'desc',\n      'fa-sort-down': currentSearch === `${field}` && currentOrder === 'desc',\n    })\n  );\n\n  let currentSortField = '' as SortField;\n\n  if (currentSearch === 'sex') {\n    currentSortField = SortField.Sex;\n  } else if (currentSearch === 'born') {\n    currentSortField = SortField.Born;\n  } else if (currentSearch === 'died') {\n    currentSortField = SortField.Died;\n  } else if (currentSearch === 'name') {\n    currentSortField = SortField.Name;\n  }\n\n  const filteredPersons = filterPeople(person, {\n    sortField: currentSortField,\n    order: currentOrder,\n    sex: currentSex,\n    query: currentQuery,\n    centuries: currentCenturies,\n  });\n\n  const findParent = (persons: Person[], parentName: string | null) => {\n    return persons.find(parent => parent.name === parentName);\n  };\n\n  if (filteredPersons.length === 0 && !isLoading) {\n    return <p>There are no people matching the current search criteria</p>;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={{\n                  sort: currentSearch === SortField.Name\n                  && currentOrder ? null : SortField.Name,\n                  order: currentSearch === SortField.Name\n                  && currentOrder !== 'desc' ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('name')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={{\n                  sort: currentSearch === SortField.Sex\n                  && currentOrder ? null : SortField.Sex,\n                  order: currentSearch === SortField.Sex\n                  && currentOrder !== 'desc' ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('sex')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={{\n                  sort: currentSearch === SortField.Born\n                  && currentOrder ? null : SortField.Born,\n                  order: currentSearch === SortField.Born\n                  && currentOrder !== 'desc' ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('born')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={{\n                  sort: currentSearch === SortField.Died\n                  && currentOrder ? null : SortField.Died,\n                  order: currentSearch === SortField.Died\n                  && currentOrder !== 'desc' ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('died')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredPersons.map(personItem => {\n          const father = findParent(person, personItem.fatherName);\n          const mother = findParent(person, personItem.motherName);\n\n          return (\n            <tr\n              key={personItem.slug}\n              data-cy=\"person\"\n              className={cn(\n                { 'has-background-warning': personItem.slug === slug },\n              )}\n            >\n              <td>\n                <Link className={cn({ 'has-text-danger': personItem.sex === 'f' })} to={`/people/${personItem.slug}`}>\n                  {personItem.name}\n                </Link>\n              </td>\n\n              <td>{personItem.sex}</td>\n              <td>{personItem.born}</td>\n              <td>{personItem.died}</td>\n              <td>\n                {mother ? (<Link className=\"has-text-danger\" to={`/people/${mother.slug}`}>{personItem.motherName}</Link>) : (\n                  personItem.motherName || '-'\n                )}\n              </td>\n              <td>\n                {father ? (<Link to={`/people/${father.slug}`}>{personItem.fatherName}</Link>) : (\n                  personItem.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person, SortField } from '../types';\n\nexport type FilterSortParams = {\n  sortField: SortField;\n  order: string | null;\n  sex: string;\n  query: string;\n  centuries: string[];\n};\n\nexport const filterPeople = (\n  people: Person[],\n  params: FilterSortParams,\n): Person[] => {\n  let filteredPeople = [...people];\n\n  if (params.sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === params.sex);\n  }\n\n  if (params.query) {\n    const normalizeQuery = params.query.toLowerCase();\n\n    filteredPeople = filteredPeople.filter(\n      person => person.name.toLowerCase().includes(normalizeQuery)\n      || person.fatherName?.toLowerCase().includes(normalizeQuery)\n      || person.motherName?.toLowerCase().includes(normalizeQuery),\n    );\n  }\n\n  if (params.centuries.length > 0) {\n    filteredPeople = filteredPeople.filter(person => {\n      const century = Math.ceil(person.born / 100).toString();\n\n      return params.centuries.includes(century);\n    });\n  }\n\n  if (params.sortField) {\n    const order = params.order ? -1 : 1;\n\n    filteredPeople = filteredPeople.sort((p1, p2) => {\n      switch (params.sortField) {\n        case SortField.Born:\n        case SortField.Died:\n          return (p1[params.sortField] - p2[params.sortField]) * order;\n        case SortField.Name:\n        case SortField.Sex:\n          return p1[params.sortField]\n            .localeCompare(p2[params.sortField]) * order;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return filteredPeople;\n};\n","import { PeopleFilters } from './PeopleFilters';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person[]\n  isLoading: boolean\n};\n\nexport const PeoplePage: React.FC<Props> = ({ person, isLoading }) => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {person.length && !isLoading ? (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          ) : null}\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {!isLoading && !person.length && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n              <PeopleTable\n                person={person}\n                isLoading={isLoading}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const loacation = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link\n            className={cn('navbar-item',\n              { 'has-background-grey-lighter': loacation.pathname === '/' })}\n            to=\"/\"\n          >\n            Home\n          </Link>\n\n          <Link\n            className={cn('navbar-item',\n              {\n                'has-background-grey-lighter':\n                loacation.pathname.includes('/people'),\n              })}\n            to=\"/people\"\n          >\n            People\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\nimport { Person } from './types';\nimport { getPeople } from './api';\n\nexport const App = () => {\n  const [person, setPerson] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPerson)\n      .finally(() => setIsLoading(false));\n  }, [setPerson, setIsLoading]);\n\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeoplePage person={person} isLoading={isLoading} />}\n              />\n              <Route\n                path=\"/people/:slug\"\n                element={<PeoplePage person={person} isLoading={isLoading} />}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}